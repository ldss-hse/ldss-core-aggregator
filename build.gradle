plugins {
    id 'org.openjfx.javafxplugin' version '0.0.12'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.4.1'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.4.1'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.1'],
            [group: 'commons-cli', name: 'commons-cli', version: '1.4'],
            [group: 'org.openjfx', name: 'javafx-base', version: '12'],
    )

    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.+"
}

javafx {
    version = '12'
    modules = [ 'javafx.base' ]
}

ext {
    javaMainClass = 'dss.lingvo.Main'
}

application {
    mainClassName = javaMainClass
}


// -------------------------------------------OLD-----------------------





jar {
    baseName = 'lingvo-dss'
    version = '0.1.0'
}



task runWithExec(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), javaMainClass
}


// end:dependencies[]

jar {
    manifest {
        attributes 'Main-Class': 'dss.lingvo.Main'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}
